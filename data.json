[
  {
    "file": "experiments/variants/boxscape2variantThree.js",
    "name": "Boxscape (2) variant (2) two too",
    "description": "A perpetual synth chord which notes fluctuate in volume together with the random visual color fields.",
    "background": "I used the same graphics from 'Boxscape (1)' as a base and messed around with Tone.js.",
    "github": "https://github.com/ju-nmd2021/creative-coding-portfolio-AxelHassellof"
  },
  {
    "file": "experiments/variants/boxscape2variant2.js",
    "name": "Boxscape (2) variant (2) two",
    "description": "A perpetual synth chord which notes fluctuate in volume together with the random visual color fields.",
    "background": "I used the same graphics from 'Boxscape (1)' as a base and messed around with Tone.js.",
    "github": "https://github.com/ju-nmd2021/creative-coding-portfolio-AxelHassellof"
  },
  {
    "file": "experiments/variants/tunnelerVariant.js",
    "name": "Boxscape (2) variant",
    "description": "A perpetual synth chord which notes fluctuate in volume together with the random visual color fields.",
    "background": "I used the same graphics from 'Boxscape (1)' as a base and messed around with Tone.js.",
    "github": "https://github.com/ju-nmd2021/creative-coding-portfolio-AxelHassellof"
  },
  {
    "file": "experiments/variants/boxscape2variant.js",
    "name": "Boxscape (2) variant",
    "description": "A perpetual synth chord which notes fluctuate in volume together with the random visual color fields.",
    "background": "I used the same graphics from 'Boxscape (1)' as a base and messed around with Tone.js.",
    "github": "https://github.com/ju-nmd2021/creative-coding-portfolio-AxelHassellof"
  },
  {
    "file": "experiments/sounds/sounds.js",
    "name": "Volume Field",
    "description": "A perpetual synth chord which notes fluctuate in volume together with the random visual color fields.",
    "background": "I used the same graphics from 'Boxscape (1)' as a base and messed around with Tone.js.",
    "github": "https://github.com/ju-nmd2021/creative-coding-portfolio-AxelHassellof"
  },
  {
    "file": "experiments/noiseField/boxscape1.js",
    "name": "Boxscape (1)",
    "description": "Boxscape is an attempt to create some landscape looking patterns with the perlin noise tools which I have explored before.",
    "background": "Naturalistic randomness is a perfect time to use Perlin noise which I have used before but this time I also implement the third dimension as time. This extends the natural transitions of Perlin noise to create consistent smooth transitions over time as you can see in some of the Boxscape models. At some points I draw a line in the noise and make different parts of it have a more extreme visual difference, creating islands of different visual distinction.",
    "github": "https://github.com/ju-nmd2021/creative-coding-portfolio-AxelHassellof"
  },
  {
    "file": "experiments/noiseField/boxscape2.js",
    "name": "Boxscape (2)",
    "description": "Boxscape is an attempt to create some landscape looking patterns with the perlin noise tools which I have explored before.",
    "background": "Naturalistic randomness is a perfect time to use Perlin noise which I have used before but this time I also implement the third dimension as time. This extends the natural transitions of Perlin noise to create consistent smooth transitions over time as you can see in some of the Boxscape models. At some points I draw a line in the noise and make different parts of it have a more extreme visual difference, creating islands of different visual distinction.",
    "github": "https://github.com/ju-nmd2021/creative-coding-portfolio-AxelHassellof"
  },
  {
    "file": "experiments/noiseField/boxscape3.js",
    "name": "Boxscape (3)",
    "description": "Boxscape is an attempt to create some landscape looking patterns with the perlin noise tools which I have explored before.",
    "background": "Naturalistic randomness is a perfect time to use Perlin noise which I have used before but this time I also implement the third dimension as time. This extends the natural transitions of Perlin noise to create consistent smooth transitions over time as you can see in some of the Boxscape models. At some points I draw a line in the noise and make different parts of it have a more extreme visual difference, creating islands of different visual distinction.",
    "github": "https://github.com/ju-nmd2021/creative-coding-portfolio-AxelHassellof"
  },
  {
    "file": "experiments/noiseField/boxscape4.js",
    "name": "Boxscape (4)",
    "description": "Boxscape is an attempt to create some landscape looking patterns with the perlin noise tools which I have explored before.",
    "background": "Naturalistic randomness is a perfect time to use Perlin noise which I have used before but this time I also implement the third dimension as time. This extends the natural transitions of Perlin noise to create consistent smooth transitions over time as you can see in some of the Boxscape models. At some points I draw a line in the noise and make different parts of it have a more extreme visual difference, creating islands of different visual distinction.",
    "github": "https://github.com/ju-nmd2021/creative-coding-portfolio-AxelHassellof"
  },
  {
    "file": "experiments/noiseField/tunneler.js",
    "name": "tunneler",
    "description": "Out of a whish to create a tunnelling effect, I made something more akin to a tornado or ripples in water.",
    "background": "By drawing each ring wider and wider over time, depending on where you look, I create an illusion of movement as if looking into the top of a tornado.",
    "github": "https://github.com/ju-nmd2021/creative-coding-portfolio-AxelHassellof"
  },
  {
    "file": "experiments/flowers/flowers1.js",
    "name": "Flowers (1)",
    "description": "For Flowers I was simply playing with repetition of translation and rotation to create swerling flower patterns. In Flowers 3 I also used perlin noise to introduce variation to create some visual interest and organic more shapes.",
    "background": "Perlin noise is a versatile mathematical formula to create pseudo-random gradient noise that feels more natural than true randomness. Because perlin noise decides the length and proximity of the lines, the whole piece looks three dimensional as we recognize the gestalt principles of “proximity” and “common fate”. ",
    "github": "https://github.com/ju-nmd2021/creative-coding-portfolio-AxelHassellof"
  },
  {
    "file": "experiments/flowers/flowers2.js",
    "name": "Flowers (2)",
    "description": "For Flowers I was simply playing with repetition of translation and rotation to create swerling flower patterns. In Flowers 3 I also used perlin noise to introduce variation to create some visual interest and organic more shapes.",
    "background": "Perlin noise is a versatile mathematical formula to create pseudo-random gradient noise that feels more natural than true randomness. Because perlin noise decides the length and proximity of the lines, the whole piece looks three dimensional as we recognize the gestalt principles of “proximity” and “common fate”. ",
    "github": "https://github.com/ju-nmd2021/creative-coding-portfolio-AxelHassellof"
  },
  {
    "file": "experiments/flowers/flowers3.js",
    "name": "Flowers (3)",
    "description": "For Flowers I was simply playing with repetition of translation and rotation to create swerling flower patterns. In Flowers 3 I also used perlin noise to introduce variation to create some visual interest and organic more shapes.",
    "background": "Perlin noise is a versatile mathematical formula to create pseudo-random gradient noise that feels more natural than true randomness. Because perlin noise decides the length and proximity of the lines, the whole piece looks three dimensional as we recognize the gestalt principles of “proximity” and “common fate”. ",
    "github": "https://github.com/ju-nmd2021/creative-coding-portfolio-AxelHassellof"
  },
  {
    "file": "experiments/drape/drape1.js",
    "name": "Drape (1)",
    "description": "The Drape came about as a way to teach myself about perlin noise. My idea was to draw simple lines but have the length and proximity of each line be decided by a noise function. I expected the results to be computer-like in its precision and nature-like in its pattern, creating a fun contrast. I simply use a for-loop and draw lines along from one point to another with the points position (and line color) sometimes being decided by perlin noise.",
    "background": "Perlin noise is a versatile mathematical formula to create pseudo-random gradient noise that feels more natural than true randomness. Because perlin noise decides the length and proximity of the lines, the whole piece looks three dimensional as we recognize the gestalt principles of “proximity” and “common fate”. ",
    "github": "https://github.com/ju-nmd2021/creative-coding-portfolio-AxelHassellof"
  },
  {
    "file": "experiments/drape/drape2.js",
    "name": "Drape (2)",
    "description": "The Drape came about as a way to teach myself about perlin noise. My idea was to draw simple lines but have the length and proximity of each line be decided by a noise function. I expected the results to be computer-like in its precision and nature-like in its pattern, creating a fun contrast. I simply use a for-loop and draw lines along from one point to another with the points position (and line color) sometimes being decided by perlin noise.",
    "background": "Perlin noise is a versatile mathematical formula to create pseudo-random gradient noise that feels more natural than true randomness. Because perlin noise decides the length and proximity of the lines, the whole piece looks three dimensional as we recognize the gestalt principles of “proximity” and “common fate”. ",
    "github": "https://github.com/ju-nmd2021/creative-coding-portfolio-AxelHassellof"
  },
  {
    "file": "experiments/drape/drape3.js",
    "name": "Drape (3)",
    "description": "The Drape came about as a way to teach myself about perlin noise. My idea was to draw simple lines but have the length and proximity of each line be decided by a noise function. I expected the results to be computer-like in its precision and nature-like in its pattern, creating a fun contrast. I simply use a for-loop and draw lines along from one point to another with the points position (and line color) sometimes being decided by perlin noise.",
    "background": "Perlin noise is a versatile mathematical formula to create pseudo-random gradient noise that feels more natural than true randomness. Because perlin noise decides the length and proximity of the lines, the whole piece looks three dimensional as we recognize the gestalt principles of “proximity” and “common fate”. ",
    "github": "https://github.com/ju-nmd2021/creative-coding-portfolio-AxelHassellof"
  },
  {
    "file": "experiments/drape/drape4.js",
    "name": "Drape (4)",
    "description": "The Drape came about as a way to teach myself about perlin noise. My idea was to draw simple lines but have the length and proximity of each line be decided by a noise function. I expected the results to be computer-like in its precision and nature-like in its pattern, creating a fun contrast. I simply use a for-loop and draw lines along from one point to another with the points position (and line color) sometimes being decided by perlin noise.",
    "background": "Perlin noise is a versatile mathematical formula to create pseudo-random gradient noise that feels more natural than true randomness. Because perlin noise decides the length and proximity of the lines, the whole piece looks three dimensional as we recognize the gestalt principles of “proximity” and “common fate”. ",
    "github": "https://github.com/ju-nmd2021/creative-coding-portfolio-AxelHassellof"
  },
  {
    "file": "experiments/drape/drape5.js",
    "name": "Drape (5)",
    "description": "The Drape came about as a way to teach myself about perlin noise. My idea was to draw simple lines but have the length and proximity of each line be decided by a noise function. I expected the results to be computer-like in its precision and nature-like in its pattern, creating a fun contrast. I simply use a for-loop and draw lines along from one point to another with the points position (and line color) sometimes being decided by perlin noise.",
    "background": "Perlin noise is a versatile mathematical formula to create pseudo-random gradient noise that feels more natural than true randomness. Because perlin noise decides the length and proximity of the lines, the whole piece looks three dimensional as we recognize the gestalt principles of “proximity” and “common fate”. ",
    "github": "https://github.com/ju-nmd2021/creative-coding-portfolio-AxelHassellof"
  },
  {
    "file": "experiments/drape/drape6.js",
    "name": "Drape (6)",
    "description": "The Drape came about as a way to teach myself about perlin noise. My idea was to draw simple lines but have the length and proximity of each line be decided by a noise function. I expected the results to be computer-like in its precision and nature-like in its pattern, creating a fun contrast. I simply use a for-loop and draw lines along from one point to another with the points position (and line color) sometimes being decided by perlin noise.",
    "background": "Perlin noise is a versatile mathematical formula to create pseudo-random gradient noise that feels more natural than true randomness. Because perlin noise decides the length and proximity of the lines, the whole piece looks three dimensional as we recognize the gestalt principles of “proximity” and “common fate”. ",
    "github": "https://github.com/ju-nmd2021/creative-coding-portfolio-AxelHassellof"
  }
]
